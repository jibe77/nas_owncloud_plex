version: '3'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:mimolette
    container_name: traefik
    ports:
      # The HTTP port
      # redirect to encrypted 443
      - "443:443"
      # nécessaire pour renouveler le certificat let's encrypt
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/owncloud/traefik/config:/etc/traefik
    # le conteneur ne démarre pas bien si le healthcheck est activé
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/dashboard || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.passHostHeader=true"
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/owncloud/portainer/portainerdata:/data
    depends_on:
      - traefik
    labels:
      - "traefik.http.routers.portainer.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
      - "traefik.http.services.portainer-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=33
      - PGID=33
      - TZ=Europe/Paris
      - USER=my_user
      - PASS=my_password
    volumes:
      - /home/owncloud/transmission/config:/config
      - /home/owncloud/oc_files/files/nas/files:/downloads/complete
      - /var/tmp/transmission:/downloads/incomplete
      - /home/owncloud/transmission/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    depends_on:
      - traefik
    # le conteneur ne démarre pas bien si le healthcheck est activé
    # healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost:9091/web/"]
    #  interval: 30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 60s
    #
    labels:
      - "traefik.http.routers.transmission.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/transmission`)"
      - "traefik.http.routers.transmission.service=transmission-svc"
      - "traefik.http.services.transmission-svc.loadbalancer.server.port=9091"
      - "traefik.http.services.transmission-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.transmission.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=my_user:my_hashed_password"
      - "traefik.http.routers.transmission.entrypoints=https"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"
      - "traefik.http.routers.transmission.tls=true"

  owncloud:
    image: owncloud/server:latest
    container_name: owncloud_server
    restart: always
    depends_on:
      - traefik
      - mariadb
      - redis
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_TRUSTED_DOMAINS=${OWNCLOUD_TRUSTED_DOMAINS}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=mariadb
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
      - OWNCLOUD_MAIL_DOMAIN=${OWNCLOUD_MAIL_DOMAIN}
      - OWNCLOUD_MAIL_FROM_ADDRESS=${OWNCLOUD_MAIL_FROM_ADDRESS}
      - OWNCLOUD_MAIL_SMTP_MODE=${OWNCLOUD_MAIL_SMTP_MODE}
      - OWNCLOUD_MAIL_SMTP_AUTH=${OWNCLOUD_MAIL_SMTP_AUTH}
      - OWNCLOUD_MAIL_SMTP_AUTH_TYPE=${OWNCLOUD_MAIL_SMTP_AUTH_TYPE}
      - OWNCLOUD_MAIL_SMTP_HOST=${OWNCLOUD_MAIL_SMTP_HOST}
      - OWNCLOUD_MAIL_SMTP_PORT=${OWNCLOUD_MAIL_SMTP_PORT}
      - OWNCLOUD_MAIL_SMTP_NAME=${OWNCLOUD_MAIL_SMTP_NAME}
      - OWNCLOUD_MAIL_SMTP_PASSWORD=${OWNCLOUD_MAIL_SMTP_PASSWORD}
      - OWNCLOUD_MAIL_SMTP_SECURE=${OWNCLOUD_MAIL_SMTP_SECURE}
      - OWNCLOUD_FILELOCKING_ENABLED=true
      - OWNCLOUD_FILESYSTEM_CHECK_CHANGES=1
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /home/owncloud/oc_files:/mnt/data
    labels:
      - "traefik.http.routers.owncloud.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/owncloud`)"
      - "traefik.http.routers.owncloud.service=owncloud-svc"
      - "traefik.http.services.owncloud-svc.loadbalancer.server.port=8080"
      - "traefik.http.services.owncloud-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.owncloud.entrypoints=https"
      - "traefik.http.routers.owncloud.tls.certresolver=letsencrypt"
      - "traefik.http.routers.owncloud.tls=true"
      - "traefik.http.routers.owncloud.middlewares=owncloud-stripprefix"
      - "traefik.http.middlewares.owncloud-stripprefix.stripprefix.prefixes=/owncloud"

  mariadb:
    image: mariadb:lts # minimum required ownCloud version is 10.9
    container_name: owncloud_mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=owncloud
      - MYSQL_USER=owncloud
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
      - MARIADB_AUTO_UPGRADE=1
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-u", "root", "--password=my_password"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /home/owncloud/oc_mysql:/var/lib/mysql
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:6
    container_name: owncloud_redis
    restart: always
    command: ["--databases", "1"]
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /home/owncloud/oc_redis:/data
    labels:
      - "traefik.enable=false"

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    depends_on:
      - traefik
    ports:
      - 9696:9696
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /home/owncloud/prowlarr/config_files:/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.http.routers.prowlarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/prowlarr`)"
      - "traefik.http.routers.prowlarr.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.prowlarr.entrypoints=https"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prowlarr.tls=true"
      # Note : il faut spécifier /prowlarr dans le base url des paramètres généraux. 

  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr
    depends_on:
      - traefik
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /home/owncloud/lidarr/lidarr_config:/config
      - /home/owncloud/oc_files/files/nas/files/my_music:/data
    ports:
      - 8686:8686
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8686"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.http.routers.lidarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/lidarr`)"
      - "traefik.http.routers.lidarr.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.lidarr.entrypoints=https"
      - "traefik.http.routers.lidarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.lidarr.tls=true"

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    ports:
      - 7878:7878
    depends_on:
      - traefik
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /home/owncloud/radarr/radarr_config:/config
      - /home/owncloud/oc_files/files/nas/files/my_movies:/data
    labels:
      - "traefik.http.routers.radarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/radarr`)"
      - "traefik.http.routers.radarr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      - "traefik.http.services.radarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr.tls=true"

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    depends_on:
      - traefik
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /home/owncloud/sonarr/sonarr_config:/config
      - /home/owncloud/oc_files/files/nas/files/my_movies:/data
    ports:
      - 8989:8989
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/sonarr`)"
      - "traefik.http.routers.sonarr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr.tls=true"

  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr
    depends_on:
      - traefik
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    ports:
      - 8787:8787
    volumes:
      - /home/owncloud/readarr/readarr_config:/config
      - /home/owncloud/oc_files/files/nas/files:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.http.routers.readarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/readarr`)"
      - "traefik.http.routers.readarr.service=readarr-svc"
      - "traefik.http.services.readarr-svc.loadbalancer.server.port=8787"
      - "traefik.http.services.readarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.readarr.entrypoints=https"
      - "traefik.http.routers.readarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.readarr.tls=true"

  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr
    depends_on:
      - traefik
    environment:
      - PUID=33
      - PGID=33
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /home/owncloud/bazarr/bazarr_config:/config
      - /home/owncloud/oc_files/files/nas/files/my_movies:/data
    ports:
      - 6767:6767
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.http.routers.bazarr.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/bazarr`)"
      - "traefik.http.routers.bazarr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.bazarr.entrypoints=https"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bazarr.tls=true"

  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    depends_on:
      - traefik
    ports:
      - "32400:32400"
      - "1900:1900"
      - "5353:5353"
      - "8324:8324"
      - "32410:32410"
      - "32412:32412"
      - "32413:32413"
      - "32414:32414"
      - "32469:32469"
    environment:
      - PUID=33
      - PGID=33
      - TZ=Europe/Paris
      - VERSION=docker
      - PLEX_CLAIM=claim-cfwsf9RQJYj2xUTfaW1u
    volumes:
      - /home/owncloud/plex/plex_config:/config
      - /home/owncloud/oc_files/files/nas/files/my_movies:/movies
      - /home/owncloud/oc_files/files/nas/files/my_music:/music
      - /home/owncloud/oc_files/files/nas/files/my_series:/tv_shows
      - /var/tmp:/var/tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:32400/web"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.http.routers.plex.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/plex`)"
      - "traefik.http.routers.plex.service=plex-svc"
      - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"
      - "traefik.http.services.plex-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.plex.entrypoints=https"
      - "traefik.http.routers.plex.tls.certresolver=letsencrypt"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.middlewares=plex-stripprefix"
      - "traefik.http.middlewares.plex-stripprefix.stripprefix.prefixes=/plex"
      - "traefik.http.routers.plex2.rule=Host(`my_domain.ddns.net`) && PathPrefix(`/web`)"
      - "traefik.http.routers.plex2.service=plex2-svc"
      - "traefik.http.services.plex2-svc.loadbalancer.server.port=32400"
      - "traefik.http.services.plex2-svc.loadbalancer.server.scheme=http"
      - "traefik.http.routers.plex2.entrypoints=https"
      - "traefik.http.routers.plex2.tls.certresolver=letsencrypt"
      - "traefik.http.routers.plex2.tls=true"
      - "traefik.http.routers.plex2.middlewares=plex2-stripprefix"
      - "traefik.http.middlewares.plex2-stripprefix.stripprefix.prefixes=/plex"
  
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * * # (vérifier tous les jours à 4h du matin)

